<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Csharp on sam的小窝</title>
    <link>http://localhost:1313/tags/csharp/</link>
    <description>Recent content in Csharp on sam的小窝</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 13 Jul 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/csharp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>会话状态Session State</title>
      <link>http://localhost:1313/posts/2016-07-13-iis-session-state-session-state/</link>
      <pubDate>Wed, 13 Jul 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-07-13-iis-session-state-session-state/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;InProc&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;InProc选项支持在进程内保存会话状态，实际上是在w3wp.exe工作进程中保存会话状态。这意味着保存会话状态数据将分别保存在每台服务器中，因此其他服务器无法访问当前服务器会话状态数据。这还意味着一个应用程序池回收操作将导致会话状态的丢失。在不考虑Off选项的情况下，这种解决方案运行速度最快，但是，除非我们应用粘性会话机制，否则这种解决方案无法在Web farm环境中正常工作。如果使用了粘性会话机制、同时没有使用Web garden的话，那么InProc是一个可行的解决方案。&lt;/p&gt;</description>
    </item>
    <item>
      <title>VisualStudio Build和Rebuild的区别</title>
      <link>http://localhost:1313/posts/2016-07-12-the-difference-between-build-and-rebuild-in-visualstudio/</link>
      <pubDate>Tue, 12 Jul 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-07-12-the-difference-between-build-and-rebuild-in-visualstudio/</guid>
      <description>&lt;p&gt;Rebuild是对Solution下的所有项目，逐个进行 Clean+Build。&lt;/p&gt;&#xA;&lt;p&gt;Build只是针对有更改过的文件进行编译。&lt;/p&gt;&#xA;&lt;p&gt;Clean+Build是对选中的项目（如果选中Solution的话，全部Clean之后，再全部Build）先执行Clean再执行Build。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CodeFile和CodeBehide的区别</title>
      <link>http://localhost:1313/posts/2016-07-11-codefile-and-codebehide-difference/</link>
      <pubDate>Mon, 11 Jul 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-07-11-codefile-and-codebehide-difference/</guid>
      <description>&lt;h2 id=&#34;codebehinda-idorgheadline19a&#34;&gt;CodeBehind&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;&#xA;&lt;p&gt;指定包含与页关联的类的已编译文件的名称,编译完后所有cs中的代码打包进dll.该属性不能在运行时使用.提供此属性是为了与以前版本的 ASP.NET 的兼容，以实现代码隐藏功能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>配置AssemblyInfo.cs</title>
      <link>http://localhost:1313/posts/2016-07-06-configuration-assemblyinfo/</link>
      <pubDate>Wed, 06 Jul 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-07-06-configuration-assemblyinfo/</guid>
      <description>&lt;p&gt;其实等同于可以在VS上选择项目的属性，其中有个 ～{Assembly Information..}～ 按钮，单击后修改窗口上的值。&lt;/p&gt;&#xA;&lt;p&gt;对于版本号AssemblyVersion，格式为 &lt;code&gt;“{Major}.{Minor}.{Build}.{Revision}”&lt;/code&gt; 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>C#编译小贴士</title>
      <link>http://localhost:1313/posts/2016-07-01-the-c-sharp-compiler-tip/</link>
      <pubDate>Fri, 01 Jul 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-07-01-the-c-sharp-compiler-tip/</guid>
      <description>&lt;h2 id=&#34;不想看到pdb文件a-idorgheadline1a&#34;&gt;不想看到pdb文件&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;&#xA;&lt;p&gt;在编译时设置高级选项中 &lt;code&gt;Output - Debug info&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;any-cpu是什么意思a-idorgheadline2a&#34;&gt;Any CPU是什么意思&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Visual Studio的编译选项 build下的platform有X64、Any CPU和x86。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nlog心得</title>
      <link>http://localhost:1313/posts/2015-05-11-nlog/</link>
      <pubDate>Mon, 11 May 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2015-05-11-nlog/</guid>
      <description>&lt;p&gt;在工程中添加引用&lt;code&gt;NLog.dll&lt;/code&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;注意：必须要对应当前的Framework版本的NLog.dll&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;添加&lt;code&gt;NLog.config&lt;/code&gt;并设置&lt;code&gt;Copy to Output Directory&lt;/code&gt;为&lt;strong&gt;Copy always&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>wsdl帮助</title>
      <link>http://localhost:1313/posts/2015-03-17-help-of-wsdl-exe/</link>
      <pubDate>Tue, 17 Mar 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2015-03-17-help-of-wsdl-exe/</guid>
      <description>&lt;h2 id=&#34;wsdlexe&#34;&gt;wsdl.exe&lt;/h2&gt;&#xA;&lt;p&gt;使用 ASP.NET，根据 WSDL 协定文件、XSD 架构和 .discomap 发现文档，为 Xml Web Services 客户端和 Xml Web Services 生成代码的实用工具。此工具可以与 disco.exe 一起使用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;参数&#34;&gt;参数&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;wsdl.exe &amp;lt;选项&amp;gt; &amp;lt;URL 或路径&amp;gt; &amp;lt;URL 或路径&amp;gt; ...&lt;/code&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
