<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nodejs on sam的小窝</title>
    <link>http://localhost:1313/tags/nodejs/</link>
    <description>Recent content in Nodejs on sam的小窝</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 29 May 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/nodejs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在Chrome中调试nodejs</title>
      <link>http://localhost:1313/posts/2016-05-29-debugging-in-chrome-nodejs/</link>
      <pubDate>Sun, 29 May 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-05-29-debugging-in-chrome-nodejs/</guid>
      <description>&lt;h2 id=&#34;installa-idorgheadline34a&#34;&gt;install&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;&#xA;&lt;p&gt;安装node-inspector插件&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;sudo npm install -g node-inspector&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;getting-starta-idorgheadline35a&#34;&gt;Getting start&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;node-debug XXX.js&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;会自动启动chrome（Chromium）浏览器访问&lt;a href=&#34;http://127.0.0.1:8080/debug?port=5858&#34;&gt;http://127.0.0.1:8080/debug?port=5858&lt;/a&gt;，这时就可以设置断点进行调试了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>学习node.js</title>
      <link>http://localhost:1313/posts/2016-05-27-study-nodejs/</link>
      <pubDate>Fri, 27 May 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-05-27-study-nodejs/</guid>
      <description>&lt;h1 id=&#34;每个模块都有requireexportsmodule三个预先定义好的变量可供使用a-idorgheadline1a&#34;&gt;每个模块都有require、exports、module三个预先定义好的变量可供使用。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;require&#xA;&lt;ul&gt;&#xA;&lt;li&gt;加载和使用别的模块，传入一个模块名，返回一个模块导出对象。&lt;/li&gt;&#xA;&lt;li&gt;模块名可使用相对路径（以./开头），或者是绝对路径（以/或C:之类的盘符开头）。&lt;/li&gt;&#xA;&lt;li&gt;模块名中的.js扩展名可以省略。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;exports&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;当前模块的导出对象，用于导出模块公有方法和属性。别的模块通过require函数使用当前模块时得到的就是当前模块的exports对象。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Grunt配置文件</title>
      <link>http://localhost:1313/posts/2015-06-19-sample-config-of-grunt/</link>
      <pubDate>Fri, 19 Jun 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2015-06-19-sample-config-of-grunt/</guid>
      <description>&lt;h2 id=&#34;gruntfilejs&#34;&gt;Gruntfile.js&lt;/h2&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;packagejson&#34;&gt;package.json&lt;/h2&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    <item>
      <title>介绍Harp</title>
      <link>http://localhost:1313/posts/2015-02-06-harp/</link>
      <pubDate>Fri, 06 Feb 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2015-02-06-harp/</guid>
      <description>&lt;h2 id=&#34;what&#34;&gt;What&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://harpjs.com/&#34;&gt;官网在此&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;nodejs写的静态web服务器，号称零配置。&lt;/p&gt;&#xA;&lt;p&gt;牛B的地方在于可以直接解析markdown文件为html页面并提供出来访问，同时还能先预先编译受支持的文件为html文件并保存起来。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
