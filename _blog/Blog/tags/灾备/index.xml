<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>灾备 on sam的小窝</title>
    <link>https://www.samrainhan.com/tags/%E7%81%BE%E5%A4%87/</link>
    <description>Recent content in 灾备 on sam的小窝</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 17 May 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.samrainhan.com/tags/%E7%81%BE%E5%A4%87/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>阿里的异地多活经验学习笔记</title>
      <link>https://www.samrainhan.com/posts/2016-05-17-system-keepalive-on-different-areas-of-alibaba/</link>
      <pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate>
      <guid>https://www.samrainhan.com/posts/2016-05-17-system-keepalive-on-different-areas-of-alibaba/</guid>
      <description>&lt;h2 id=&#34;流量是可以随时切换的&#34;&gt;流量是可以随时切换的&lt;/h2&gt;&#xA;&lt;p&gt;如果恢复时间能控制得非常好，可能整个故障控制力就非常强。&lt;/p&gt;&#xA;&lt;p&gt;用户通过代理来访问数据中心，代理如果检测到数据中心出现问题，它会自动把流量导入到另一个数据中心。&lt;/p&gt;</description>
    </item>
    <item>
      <title>微博的异地多活经验学习笔记</title>
      <link>https://www.samrainhan.com/posts/2016-05-13-keep-live-between-different-areas-about-weibo/</link>
      <pubDate>Fri, 13 May 2016 00:00:00 +0000</pubDate>
      <guid>https://www.samrainhan.com/posts/2016-05-13-keep-live-between-different-areas-about-weibo/</guid>
      <description>&lt;h1 id=&#34;微博的异地多活经验学习笔记a-idsec-1-namesec-1a&#34;&gt;微博的异地多活经验学习笔记&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;基于业务写消息到queuea-idsec-1-1-namesec-1-1a&#34;&gt;基于业务写消息到Queue&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;在线容量评估分级上线快速流量均衡等能力a-idsec-1-2-namesec-1-2a&#34;&gt;在线容量评估、分级上线、快速流量均衡等能力&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;问题a-idsec-1-3-namesec-1-3a&#34;&gt;问题&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;各机房之间的延时a-idsec-1-3-1-namesec-1-3-1a&#34;&gt;各机房之间的延时&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h3&gt;&#xA;&lt;p&gt;这套方案中，每个机房的缓存是完全独立的，由每个机房的Processor（专门负责消息处理的程序，类Storm）根据收到的消息进行缓存更新。由于消息不会重复分发，而且信息完备，所以MytriggerQ方案存在的缓存更新脏数据问题就解决了。而当缓存不存在时，会穿透到MySQL从库，然后进行回种。可能出现的问题是，缓存穿透，但是MySQL从库如果此时出现延迟，这样就会把脏数据种到缓存中。我们的解决方案是做一个延时10分钟的消息队列，然后由一个处理程序来根据这个消息做数据的重新载入。一般从库延时时间不超过10分钟，而10分钟内的脏数据在微博的业务场景下也是可以接受的。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
